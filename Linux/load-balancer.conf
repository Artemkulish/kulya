echo -n | openssl s_client -servername sslsecure.website -connect 192.168.100.8:443

# Load balancing rule
upstream backend {
    #ip_hash;
    #least_conn;
    server 192.168.100.5:8080 max_fails=2 fail_timeout=20s;
    #server 192.168.100.10:8080 max_fails=2 fail_timeout=20s;
}


# VirtualHost for 80 port
server {
   listen 80;
   server_name sslsecure.website www.sslsecure.website;
   return 301 https://$server_name$request_uri;
}


# VirtualHost for 443 port
server {
   listen 443 ssl;
   server_name sslsecure.website www.sslsecure.website;
   
   keepalive_timeout   70;
   ssl_session_cache   shared:SSL:10m;
   ssl_session_timeout 10m;
   ssl_buffer_size 8k;

   ssl_protocols  TLSv1.2 TLSv1.3;
   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
   ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
   ssl_prefer_server_ciphers on;
   ssl_ecdh_curve secp384r1;
   ssl_stapling on;
   ssl_stapling_verify on;

   #RSA
   ssl_certificate /etc/ssl/sslsecure.crt;
   ssl_certificate_key /etc/ssl/sslsecure.key;

   #ECC
   ssl_certificate /etc/ssl/ecc_wildcard.crt;
   ssl_certificate_key /etc/ssl/ecc_wildcard.key;

   access_log /var/log/nginx/sslsecure-access.log;
   error_log /var/log/nginx/sslsecure-error.log;

   location / {
       proxy_pass http://backend/;
   }
}
